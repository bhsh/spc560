##############################################################################
# This file is automatically generated and can be overwritten, do no change
# this file manually.
##############################################################################
##############################################################################
# Project, sources and paths
#
# Define project name here
PROJECT = out

# Imported source files
include components/components.mak

# Checks if there is a user mak file in the project directory.
ifneq ($(wildcard user.mak),)
    include user.mak
endif

# Define linker script file here
LDSCRIPT = application.ld

# C sources here.
CSRC =      $(LIB_C_SRC) \
            $(APP_C_SRC) \
            $(U_C_SRC) \
            ./components/components.c
			
# List ASM source files here.
ASMSRC =    $(LIB_ASM_SRC) \
            $(APP_ASM_SRC) \
            $(U_ASM_SRC)

# Inclusion paths.
INCDIR =    $(LIB_INCLUDES) \
            $(APP_INCLUDES) \
            ./components

##############################################################################
# Compiler settings
#
MCU  = e200z0 -meabi -msdata=none -mregnames
TRGT = E:\ECU\SPC_ECU\project_dir\K12\02_ScriptTool\02_FreeGcc\bin\ppc-freevle-eabi-
CC   = $(TRGT)gcc
LD   = $(TRGT)gcc
CP   = $(TRGT)objcopy
AS   = $(TRGT)gcc -x assembler-with-cpp
OD   = $(TRGT)objdump
SZ   = $(TRGT)size
HEX  = $(CP) -O ihex
MOT  = $(CP) -O srec
BIN  = $(CP) -O binary

# Define C warning options here
CWARN = -Wall -Wextra -Wstrict-prototypes
##############################################################################
# Processing options coming from the upper Makefile.
# Compiler options
OPT       = -O2 -gdwarf-2 -fomit-frame-pointer -falign-functions=16 -mno-spe -msoft-float
OPT      += -ffunction-sections -fdata-sections -fno-common
LDOPT     = --gc-sections,-lm,-lc

# VLE option handling.
DDEFS    += -DPPC_USE_VLE=1
DADEFS   += -DPPC_USE_VLE=1
MCU      += -mvle

# Output directory and files
BUILDDIR = build

OUTFILES = $(BUILDDIR)/$(PROJECT).elf $(BUILDDIR)/$(PROJECT).hex \
           $(BUILDDIR)/$(PROJECT).mot $(BUILDDIR)/$(PROJECT).bin \
           $(BUILDDIR)/$(PROJECT).dmp

# Source files groups and paths
SRC	      = $(CSRC)
SRCPATHS  = $(sort $(dir $(ASMXSRC)) $(dir $(ASMSRC)) $(dir $(SRC)))

# Various directories
OBJDIR    = $(BUILDDIR)/obj
LSTDIR    = $(OBJDIR)
DEPDIR    = $(BUILDDIR)/dep

# Object files groups
COBJS     = $(addprefix $(OBJDIR)/, $(notdir $(CSRC:.c=.o)))
ASMOBJS   = $(addprefix $(OBJDIR)/, $(notdir $(ASMSRC:.s=.o)))
OBJS	  = $(ASMOBJS) $(COBJS)

# Paths
IINCDIR   = $(patsubst %,-I%,$(INCDIR) $(DINCDIR) $(UINCDIR))
LLIBDIR   = $(patsubst %,-L%,$(DLIBDIR) $(ULIBDIR))

# Macros
DEFS      = $(DDEFS) $(UDEFS)
ADEFS 	  = $(DADEFS) $(UADEFS)

# Libs
LIBS      = $(DLIBS) $(ULIBS)

# Various settings
MCFLAGS   = -mcpu=$(MCU)
ODFLAGS	  = -x --syms
ASFLAGS   = $(MCFLAGS) -Wa,-amhls=$(LSTDIR)/$(notdir $(<:.s=.lst)) $(ADEFS)
CFLAGS    = $(MCFLAGS) $(OPT) $(CWARN) -Wa,-alms=$(LSTDIR)/$(notdir $(<:.c=.lst)) $(DEFS)
LDFLAGS   = $(MCFLAGS) $(OPT) -nostartfiles $(LLIBDIR) -Wl,-Map=$(BUILDDIR)/$(PROJECT).map,--cref,--no-warn-mismatch,--library-path=$(RULESPATH),$(LDOPT),--script=$(LDSCRIPT)

# Generate dependency information
ASFLAGS  += -MD -MP -MF $(DEPDIR)/$(@F).d
CFLAGS   += -MD -MP -MF $(DEPDIR)/$(@F).d

# Paths where to search for sources
VPATH     = $(SRCPATHS)
#
# Makefile rules
#
all: $(OBJS) $(OUTFILES)
#all: $(OBJS)

$(OBJS): | $(BUILDDIR)

$(BUILDDIR) $(OBJDIR) $(DEPDIR):
	@echo Compiler Options
	@echo $(CC) -c $(CFLAGS) -I. $(IINCDIR) main.c -o main.o
	mkdir .\build
	mkdir .\build\obj
	mkdir .\build\dep
#	@echo $(RULESPATH)
	
$(COBJS) : $(OBJDIR)/%.o : %.c 
	@echo Compiling $(<F)
	@$(CC) -c $(CFLAGS) -I. $(IINCDIR) $< -o $@

$(ASMOBJS) : $(OBJDIR)/%.o : %.s Makefile
	@echo Compiling $(<F)
	@$(AS) -c $(ASFLAGS) -I. $(IINCDIR) $< -o $@

$(BUILDDIR)/$(PROJECT).elf : $(OBJS) $(LDSCRIPT)
	@echo Linking $@
	@$(LD) $(OBJS) $(LDFLAGS) $(LIBS) -o $@

$(BUILDDIR)/$(PROJECT).hex: $(BUILDDIR)/$(PROJECT).elf $(LDSCRIPT)
	@echo Creating $@
	@$(HEX) $< $@

%.mot: %.elf $(LDSCRIPT)
	@echo Creating $@
	@$(MOT) $< $@

%.bin: %.elf $(LDSCRIPT)
	@echo Creating $@
	@$(BIN) $< $@

%.dmp: %.elf $(LDSCRIPT)
	@echo Creating $@
	@$(OD) $(ODFLAGS) $< > $@
	@$(SZ) $<
	@echo Done

clean:
	@echo Cleaning
	-rm -fR $(DEPDIR) $(BUILDDIR)
	@echo Done

# Include the dependency files, should be the last of the makefile
#
#-include $(shell mkdir .dep 2>null) $(wildcard .dep/*)
# *** EOF ***


